name: CI/CD Pipeline

# Triggers da pipeline
on:
  # Executa em todos os commits (push)
  push:
    branches:
      - "**" # Todas as branches

  # Executa em pull requests
  pull_request:
    branches:
      - master

  # Webhook do Contentful - para quando o CMS for atualizado
  repository_dispatch:
    types: [contentful-update]

  # Executa Ã s 00:00 de todos os dias da semana (segunda a sexta)
  # ATENÃ‡ÃƒO: Desligar depois de validar!
  schedule:
    - cron: "0 0 * * 1-5" # 00:00 UTC, segunda a sexta-feira

  # Permite execuÃ§Ã£o manual
  workflow_dispatch:

# PermissÃµes necessÃ¡rias para o workflow
permissions:
  contents: read
  pull-requests: write
  statuses: write

# Cancelar execuÃ§Ãµes anteriores da mesma branch (otimizaÃ§Ã£o)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Code Quality Checks (run in parallel)
  prettier-check:
    name: Prettier Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier check
        run: npx prettier --check .

  eslint-check:
    name: ESLint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint .

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Upload test coverage (GitHub feature)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: coverage/
          retention-days: 30

  # Job 2: Build (depends on all checks passing)
  build:
    name: Build Project
    needs: [prettier-check, eslint-check, tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          CONTENTFUL_REVALIDATE_SECRET: ${{ secrets.CONTENTFUL_REVALIDATE_SECRET }}

  # Job 3: Deploy (apenas na branch master e se tudo passar)
  deploy:
    name: Deploy to Netlify
    needs: build
    runs-on: ubuntu-latest
    # SÃ³ corre deploy na branch master E se todos os jobs anteriores passaram
    if: github.ref == 'refs/heads/master' && success()
    environment:
      name: production
      url: ${{ steps.deploy.outputs.deploy-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project for deployment
        run: npm run build
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          CONTENTFUL_REVALIDATE_SECRET: ${{ secrets.CONTENTFUL_REVALIDATE_SECRET }}

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Deploy to Netlify
        id: deploy
        run: |
          netlify deploy --prod --dir=.next --message="Deploy from GitHub Actions - ${{ github.sha }}" > deploy-output.txt
          echo "deploy-url=$(grep -o 'https://[^ ]*' deploy-output.txt | head -1)" >> $GITHUB_OUTPUT
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Comment deployment URL on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Deployed to: ${{ steps.deploy.outputs.deploy-url }}'
            })
